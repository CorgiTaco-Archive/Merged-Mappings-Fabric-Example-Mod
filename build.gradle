import io.github.opencubicchunks.gradle.MergedMappingsDependency

buildscript {
	repositories {
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
	}
	dependencies {
		classpath 'net.fabricmc:fabric-loom:0.8.3'
	}
}

plugins {
	id 'fabric-loom'
	id 'maven-publish'
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(16)
	}
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group


loom {
	customManifest = "https://gist.githubusercontent.com/modmuss50/6e00baf80dcbaa42f3a2fc846b290128/raw/f035ef8f75164f56ec6352809a34841d326bae1c/1_18_experimental-snapshot-1.json"
}


dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	def dummyConfig = configurations.create("dummyResolvingConfiguration")
	mappings new MergedMappingsDependency(project, dummyConfig,
			minecraft.officialMojangMappings(),
			dependencies.add("dummyResolvingConfiguration", dependencies.create("net.fabricmc:yarn:${project.yarn_version}:v2")))

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
}

minecraft {
//	accessWidener = file("src/main/resources/modid.aw")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

allprojects {
	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xmaxerrs" << "1000"
		}
	}
}
